1、回顾Token[防止表单的重复提交]
	用户打开注册页面时：
		创建一个唯一的字符串token
		存到session域中
		设置到注册表单的隐藏域中
	用户提交注册请求时
		通过Userservlet处理请求时
		获取请求参数中的token
		获取Session域中的token
		比较
			如果相同可以注册
			如果不相同就是重复提交
		用完session中的token移除掉
		
2、实际开发中的验证码图片
	用户打开注册页面
		创建一个唯一字符串token
		存到session中
		将token转为验证码图片[通过第三方工具实现 kaptcha]
		将图片设置到验证码img标签位置
	用户提交注册请求时
		通过Userservlet处理请求时[用户会根据验证码图片输入验证码]
		获取请求参数中的验证码字符串
		获取Session域中的token	
		比较	
			如果相同可以注册
			如果不相同就是重复提交
		用完session中的验证码移除掉
3、kaptchaServlet被访问的执行流程
	创建一个随机字符串
	存到Session域中[kaptcha.session.key
					在session中存储属性的名字
					默认 KAPTCHA_SESSION_KEY]
	将字符串转为Code图片返回
4、在项目中使用
	》注册kaptchaServlet
	》在注册页面img标签中使用验证码图片
	》用户提交注册请求给UserServlet：regist方法时，判断
	》完成点击验证码图片切换图片
---防止用户的表单重复提交，防止恶意攻击	
使用Session保存的用户登录状态
	》用户登录成功，将查询到的用户对象存到session中共享
		UserServlet
	》在显示成功页面时，显示登录成功的头
		提取登录成功头的公共部分
用户的注销
	》用户点击注销超链接，请求提交给Userservlet处理
		移除Session域中的user对象
		logout()
-----购物车：		
	购物车实现的三种方式：
	 	基于Cookie的，将购物信息都放入到Cookie中，由浏览器保存。
	 	基于Session的，将购物信息都放入到Session中，由服务器保存。√
	 			坏处：浏览器关闭之后购物车信息消失
	 			用户登录与否都可以操作购物车
	 	基于数据库表的，将购物信息都放入数据库中，由数据库保存。
		
	》在购物车中提供添加图书到购物车的方法	
		解决小数精度问题
		用户在首页点击加入购物车 携带图书id-->CartServlet-->addBook2Cart()
			--> 获取图书id，根据id查询图书对象，从session中获取购物车对象
					-如果获取到：购物车对象可以直接使用，调用方法将图书加入到购物车中
					-如果获取的是null：购物车对象不存在，创建购物车对象，将购物车存到session中，在将图书加入到购物车中
	